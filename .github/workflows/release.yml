name: Create Release with Assets

on:
  push:
    tags:
      - "v*"  # Triggers the workflow for tags that start with 'v'

permissions:
  contents: write  # Grants permission to write to repository contents
  packages: write  # Grants permission to publish packages (if needed)

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest  # Runs the job on the latest Ubuntu environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Set up GitHub CLI
        uses: cli/cli@v3  # Set up GitHub CLI for use in the workflow

      - name: Build Project (Optional)
        run: |
          echo "Building the project..."  # Replace with actual build commands
          # For example, if you have a Python project, you might do:
          # python setup.py bdist_wheel

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication
          TAG: ${{ github.ref_name }}  # Get the tag name from the workflow context
        run: |
          gh release create "$TAG" \  # Create a new release using the GitHub CLI
              --repo "$GITHUB_REPOSITORY" \  # Specify the repository
              --title "${TAG#v}" \  # Use the tag as the release title (removing 'v' prefix)
              --generate-notes  # Automatically generate release notes from commit messages

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication
        run: |
          echo "Uploading assets..."
          # Replace with the paths to your asset files
          if [[ -f "path/to/your/asset/file1" ]]; then
            gh release upload "$TAG" path/to/your/asset/file1 --clobber
          fi
          if [[ -f "path/to/your/asset/file2" ]]; then
            gh release upload "$TAG" path/to/your/asset/file2 --clobber
          fi
          # Add additional assets as needed
