name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build the Docker image
      env:
        ACCESS_TOKEN_EMAIL_SERVICE: ${{ secrets.ACCESS_TOKEN_EMAIL_SERVICE }}
      run: |
        docker build . \
        --file Dockerfile \
        --tag frontend:$(git rev-parse --short HEAD) \
        --compress \
        --build-arg ACCESS_TOKEN_EMAIL_SERVICE=$ACCESS_TOKEN_EMAIL_SERVICE

    - name: Save Docker image to compressed file
      run: |
        docker image save frontend:$(git rev-parse --short HEAD) | xz -z -e -7 -T0 > frontend.xz

    - name: List out files
      run: ls -lh

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: frontend_${{ github.run_number }}
        release_name: "Frontend Release ${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload compressed Docker image to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: frontend.xz
        asset_name: frontend.xz
        asset_content_type: application/x-xz
